{
  "entities": {
    "Project": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Project",
      "type": "object",
      "description": "Represents a project in the ProjectZen application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the project."
        },
        "name": {
          "type": "string",
          "description": "Name of the project."
        },
        "description": {
          "type": "string",
          "description": "Detailed description of the project."
        },
        "deadline": {
          "type": "string",
          "description": "Deadline for the project completion.",
          "format": "date-time"
        },
        "teamMemberIds": {
          "type": "array",
          "description": "References to TeamMember. (Relationship: TeamMember N:N Project)",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "name",
        "description",
        "deadline"
      ]
    },
    "Task": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Task",
      "type": "object",
      "description": "Represents a task within a project.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the task."
        },
        "projectId": {
          "type": "string",
          "description": "Reference to Project. (Relationship: Project 1:N Task)"
        },
        "name": {
          "type": "string",
          "description": "Name of the task."
        },
        "description": {
          "type": "string",
          "description": "Detailed description of the task."
        },
        "assignedToId": {
          "type": "string",
          "description": "Reference to TeamMember. (Relationship: TeamMember 1:N Task) The team member assigned to the task."
        },
        "progress": {
          "type": "number",
          "description": "Progress of the task (e.g., 0-100 representing percentage complete)."
        }
      },
      "required": [
        "id",
        "projectId",
        "name",
        "description",
        "assignedToId",
        "progress"
      ]
    },
    "TeamMember": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "TeamMember",
      "type": "object",
      "description": "Represents a team member working on the project.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the team member."
        },
        "name": {
          "type": "string",
          "description": "Name of the team member."
        },
        "email": {
          "type": "string",
          "description": "Email address of the team member.",
          "format": "email"
        },
        "skills": {
          "type": "array",
          "description": "List of skills possessed by the team member.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "name",
        "email",
        "skills"
      ]
    },
    "UserProfile": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "UserProfile",
      "type": "object",
      "description": "Represents a user's profile in the application.",
      "properties": {
        "uid": {
          "type": "string",
          "description": "The user's unique ID from Firebase Auth."
        },
        "email": {
          "type": "string",
          "description": "The user's email address.",
          "format": "email"
        },
        "displayName": {
          "type": "string",
          "description": "The user's display name."
        },
        "photoURL": {
          "type": "string",
          "description": "URL of the user's profile picture.",
          "format": "uri"
        }
      },
      "required": ["uid", "email"]
    }
  },
  "auth": {
    "providers": [
      "password",
      "google.com"
    ]
  },
  "firestore": {
    "/users/{userId}": {
      "schema": { "$ref": "#/entities/UserProfile" },
      "description": "Stores public information about a user."
    },
    "/projects/{projectId}": {
      "schema": { "$ref": "#/entities/Project" },
      "description": "Stores project details."
    }
  }
}